// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlagiarismChecker.Data;

namespace PlagiarismChecker.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220114081752_model-update")]
    partial class modelupdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("PlagiarismChecker.Models.ComparisonHistory", b =>
                {
                    b.Property<string>("COmparisonHistoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentA")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentB")
                        .HasColumnType("TEXT");

                    b.Property<int>("PercentageSimilarity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResultDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("COmparisonHistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("ComparisonHistories");
                });

            modelBuilder.Entity("PlagiarismChecker.Models.Documents", b =>
                {
                    b.Property<string>("DocumentsId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("BLOB");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("DocumentsId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("PlagiarismChecker.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlagiarismChecker.Models.ComparisonHistory", b =>
                {
                    b.HasOne("PlagiarismChecker.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
